"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.InfoWindow = void 0;

var _react = require("react");

var _reactDom = require("react-dom");

var _helper = require("../../utils/helper");

var _mapContext = _interopRequireDefault(require("../../map-context"));

var _invariant = _interopRequireDefault(require("invariant"));

var _proptypes = require("../../proptypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var eventMap = {
  onCloseClick: 'closeclick',
  onContentChanged: 'content_changed',
  onDomReady: 'domready',
  onPositionChanged: 'position_changed',
  onZindexChanged: 'zindex_changed'
};
var updaterMap = {
  open: function open(instance, options) {
    instance.open(options);
  },
  close: function close(instance) {
    instance.close();
  },
  options: function options(instance, _options) {
    instance.setOptions(_options);
  },
  position: function position(instance, _position) {
    instance.setPosition(_position);
  },
  zIndex: function zIndex(instance, _zIndex) {
    instance.setZIndex(_zIndex);
  }
};

var InfoWindow =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(InfoWindow, _PureComponent);

  function InfoWindow() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, InfoWindow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfoWindow)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "registeredEvents", []);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      infoWindow: null
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "componentDidMount", function () {
      var infoWindow = new google.maps.InfoWindow(Object.assign({
        map: _this.context
      }, _this.props.options));
      infoWindow.setMap(_this.context);
      _this.containerElement = document.createElement('div');

      _this.setState(function () {
        return {
          infoWindow: infoWindow
        };
      }, function () {
        _this.registeredEvents = (0, _helper.applyUpdatersToPropsAndRegisterEvents)({
          updaterMap: updaterMap,
          eventMap: eventMap,
          prevProps: {},
          nextProps: _this.props,
          instance: _this.state.infoWindow
        });

        _this.state.infoWindow.setContent(_this.containerElement);

        _this.open(_this.state.infoWindow, _this.props.anchor);
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "componentWillUnmount", function () {
      (0, _helper.unregisterEvents)(_this.registeredEvents);
      _this.state.infoWindow && _this.state.infoWindow.setMap(null);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "render", function () {
      return _this.containerElement ? (0, _reactDom.createPortal)(_react.Children.only(_this.props.children), _this.containerElement) : null;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "open", function (infoWindow, anchor) {
      if (anchor) {
        infoWindow.open(infoWindow.getMap(), anchor);
      } else if (infoWindow.getPosition()) {
        infoWindow.open(infoWindow.getMap());
      } else {
        (0, _invariant.default)(false, "You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.");
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getContent", function () {
      return _this.state.infoWindow.getContent();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPosition", function () {
      return _this.state.infoWindow.getPosition();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getZIndex", function () {
      return _this.state.infoWindow.getZIndex();
    });

    return _this;
  }

  _createClass(InfoWindow, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      (0, _helper.unregisterEvents)(this.registeredEvents);
      this.registeredEvents = (0, _helper.applyUpdatersToPropsAndRegisterEvents)({
        updaterMap: updaterMap,
        eventMap: eventMap,
        prevProps: prevProps,
        nextProps: this.props,
        instance: this.state.infoWindow
      });
    }
  }]);

  return InfoWindow;
}(_react.PureComponent);

exports.InfoWindow = InfoWindow;

_defineProperty(InfoWindow, "contextType", _mapContext.default);

var _default = InfoWindow;
exports.default = _default;